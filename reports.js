document.addEventListener("DOMContentLoaded", () => {
  const generateBtn = document.querySelector("button.btn-primary.w-full");
  const reportTable = document.querySelector("table tbody");

  // Handle Generate Report
  generateBtn.addEventListener("click", () => {
    const type = document.querySelectorAll("select")[0].value;
    const range = document.querySelectorAll("select")[1].value;
    const region = document.querySelectorAll("select")[2].value;

    const today = new Date().toLocaleDateString("en-GB", {
      day: "2-digit",
      month: "short",
      year: "numeric"
    });

    const newRow = document.createElement("tr");
    newRow.className = "border-slate-700 hover:bg-slate-800/50 fade-in-up";
    newRow.innerHTML = `
      <td>${type} (${range})</td>
      <td>${today}</td>
      <td>${region}</td>
      <td>
        <button class="btn btn-xs btn-outline btn-primary mr-2 view-btn">View</button>
        <button class="btn btn-xs btn-outline btn-success download-btn">Download</button>
      </td>
    `;
    reportTable.prepend(newRow); // Add to top
  });

  // Delegate click events for view/download
  reportTable.addEventListener("click", (e) => {
    if (e.target.classList.contains("view-btn")) {
      const row = e.target.closest("tr");
      const reportName = row.querySelector("td").innerText;
      alert("ðŸ“Š Viewing report: " + reportName);
    }
    if (e.target.classList.contains("download-btn")) {
      const row = e.target.closest("tr");
      const reportName = row.querySelector("td").innerText;

      // Fake download as text file
      const blob = new Blob([`Report: ${reportName}\nGenerated by CityLens.`], { type: "text/plain" });
      const link = document.createElement("a");
      link.href = URL.createObjectURL(blob);
      link.download = reportName.replace(/\s+/g, "_") + ".txt";
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  });
});